(define (unbound? expr (tagged-list? expr 'unbound)))
(define (unbind-variable expr env) (make-unbound! (cadr expr) env))
(define (make-unbound! var env)
  (define (env-loop env)
    (define (scan vars vals)
      (cond ((null? vars)
             (env-loop (enclosing-environment env)))
            ((eq? var (car vars))
			 (set-cdr! vars (cdr vars))
             (set-cdr! vals (cdr vals)))
            (else (scan (cdr vars) (cdr vals)))))
    (if (eq? env the-empty-environment)
        (error "Unbound variable -- UNBOUND!" var)
        (let ((frame (first-frame env)))
          (scan (frame-variables frame)
                (frame-values frame)))))
  (env-loop env))
